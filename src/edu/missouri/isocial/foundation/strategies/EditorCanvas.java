/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.missouri.isocial.foundation.strategies;

import edu.missouri.isocial.foundation.ConnectionRepository;
import edu.missouri.isocial.foundation.ContextMenuBuilder;
import edu.missouri.isocial.foundation.Editor;
import edu.missouri.isocial.foundation.EditorCanvasController;
import edu.missouri.isocial.foundation.Lookup;
import edu.missouri.isocial.foundation.MappedConnectionRepository;
import edu.missouri.isocial.foundation.strategies.LookupImpl;
import edu.missouri.isocial.foundation.components.core.Connection;
import edu.missouri.isocial.foundation.components.core.ConnectionController;
import edu.missouri.isocial.foundation.components.core.Connector;
import edu.missouri.isocial.foundation.components.core.DraggableJPanel;
import edu.missouri.isocial.foundation.contextmenu.ContextMenu;

/**
 *
 * @author Ryan
 */
public class EditorCanvas extends javax.swing.JPanel implements Editor {
    
    private ContextMenu contextMenu;
    private EditorCanvasController controller;
    private ConnectionRepository repository;
    public EditorCanvas() {
        initComponents();
        
        controller = new EditorCanvasController(this);
        contextMenu = new ContextMenuBuilder().build();
        repository = new MappedConnectionRepository();
    }

    @Override
    public Connection addConnection(Connector start, Connector end) {
        
        Connection connection = new Connection(start, end);
        start.addEndPoint(end);
        end.addEndPoint(start);
        
        add(connection);
        connection.setVisible(true);
        ConnectionController cc = new ConnectionController(this, start, end, connection);
        cc.setVisible(true);
        
        
        String connectionID = start.getID()+"->"+end.getID();
        repository.addConnection(connectionID, connection);
        
        return connection;
    }
    
    @Override
    public void removeConnection(String connectionID) {
        Connection connection = repository.getConnection(connectionID);
        repository.removeConnection(connectionID);
        if(connection == null) {
            return;
        }
        connection.cleanup();
        connection.setVisible(false);
        remove(connection);
 
        System.out.println("REMOVING CONNECTION: "+connectionID);
        
    }
    
    @Override
    public void addDraggable(DraggableJPanel draggable) {
        add(draggable);
    }

    @Override
    public void showContextMenu(int xOnScreen, int yOnScreen) {
        contextMenu.show(this, xOnScreen, yOnScreen);
        contextMenu.setVisible(true);
    }
    
    @Override
    public void removeDraggable(DraggableJPanel draggable) {
        remove(draggable);
    }

    public void executeProgram() {
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


}
